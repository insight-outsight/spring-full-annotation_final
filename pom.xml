<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  	<modelVersion>4.0.0</modelVersion>
  	<groupId>org.selffun.sfa</groupId>
  	<!-- 改groupId和artifactId -->
  	<artifactId>spring-full-annotation</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  	<packaging>war</packaging>
  	<name>SpringFullAnnotation</name>
  	<description>A Spring Full Annotation Configuration。</description>
  
	<properties>
		<project.build.jdk.version>1.8</project.build.jdk.version>
		<build.resourceEncoding>UTF-8</build.resourceEncoding>
		<package.dir>${basedir}/target</package.dir>
		<package.name>${project.artifactId}</package.name>
		<spring.version>4.1.5.RELEASE</spring.version>         
	</properties>
	
	
	<dependencies>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_3.0_spec</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.24</version>
		</dependency>
		
		
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<version>2.0.1</version>
		</dependency>	
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
      		<groupId>org.springframework</groupId>
      		<artifactId>spring-core</artifactId>
      		<version>${spring.version}</version>
      		<scope>compile</scope>
    	</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
			<scope>compile</scope>
		</dependency>
    	<dependency>
      		<groupId>org.springframework</groupId>
      		<artifactId>spring-jdbc</artifactId>
      		<version>${spring.version}</version>
      		<scope>compile</scope>
    	</dependency>
    	<dependency>
      		<groupId>org.springframework</groupId>
      		<artifactId>spring-test</artifactId>
      		<version>${spring.version}</version>
      		<scope>compile</scope>
    	</dependency>
		<!-- spring transactionManager need cglib.jar, nodep is for avoding conflict -->
    	<dependency>
      		<groupId>cglib</groupId>
      		<artifactId>cglib-nodep</artifactId>
      		<version>2.2.2</version>
      		<scope>compile</scope>
    	</dependency>
    	<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.0.2</version>
		</dependency>

		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- reserve
		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.7.0</version>
		</dependency>
		 -->
	</dependencies>
	

	<build>
		<finalName>${package.name}</finalName>
		<filters>
			<filter>${env.properties.file}</filter>
		</filters>
		<resources>
			<resource>
				<!-- Specifies the directory structure to place the set of resources from a build. 
				Target path defaults to the base directory. A commonly specified target path for resources 
				that will be packaged in a JAR is META-INF. <resource>标签使用的是<build> -> <plugins> -> <plugin>
				中配置的maven-resources-plugin插件，如果没有出现这个配置,作为核心内置插件，mave也n会自动加载。
				例如：
				<targetPath>m</targetPath>
				表示${basedir}/src/main/resources文件被拷贝到APP_ROOT\WEB-INF\classes\m下
				省略<targetPath>标签表示${basedir}/src/main/resources文件被拷贝到APP_ROOT\WEB-INF\classes下
				-->
				<filtering>true</filtering>
				<directory>${basedir}/src/main/resources</directory>
				<!-- 如果冲突，exludes优先于includes -->

<!-- 				<includes>
					<include>viewer/*.*</include>
					<include>**/*.*</include>
				</includes>	 -->
				<!-- 不再一一include，剩余 src/main/resources一切目录文件，交由maven-war-plugin处理 -->
				
				<!--
				<excludes>
					<exclude>**/exclude.xml</exclude>
					 
					<exclude>**/*</exclude>
				</excludes>							
				-->
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>${basedir}/src/test/resources</directory>
				<includes>
					<include>**</include>
				</includes>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>${build.resourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.2</version>
				<configuration>
					<verbose>true</verbose>
					<!--
					fork为true会导致WEB-INF/classes下出现javac.bat和org.codehaus.plexus.compiler.javac.JavacCompiler6780378540917534892arguments文件
					<fork>true</fork>
					<executable> <path-to-javac> </executable>
					-->
					<compilerVersion>${project.build.jdk.version}</compilerVersion>
					<source>${project.build.jdk.version}</source>
					<target>${project.build.jdk.version}</target>
					<encoding>${project.build.compiler.encoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!-- 容忍缺失web.xml -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- 拷贝资源文件时防止乱码 -->
					<resourceEncoding>${build.resourceEncoding}</resourceEncoding>
<!-- 					<webResources>
						<resource>
							<directory>src/main/resources/</directory>
							<excludes>
                				<exclude>**/*.*</exclude>
              				</excludes>
							<filtering>true</filtering> 
							<targetPath>WEB-INF/classes/f</targetPath>
						</resource>
							||开始，这个片段意为对src/main/webapp/WEB-INF的web.xml执行过滤，即替换${}内容
							<resource>
								<directory>src/main/webapp/WEB-INF</directory>
								<includes>
									<include>web.xml</include>
								</includes>
								<filtering>true</filtering> 
								<targetPath>WEB-INF</targetPath>
							</resource>
							||结束
					</webResources>-->
<!-- 				<webXml>src\main\webapp\WEB-INF\web.xml</webXml>  --> 
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<webappDirectory>${package.dir}/${package.name}</webappDirectory>
					<!--  <warName>blah</warName> 未测试这个标签-->
				</configuration>
			</plugin>
			<plugin>
			    <groupId>org.eclipse.jetty</groupId>
			    <artifactId>jetty-maven-plugin</artifactId>
			    <version>9.2.9.v20150224</version>
  				<configuration>
					<scanIntervalSeconds>60</scanIntervalSeconds>
					<webApp>
						<contextPath>/</contextPath>
					</webApp>
					<httpConnector>
							<port>8084</port>
 							<name>org.eclipse.jetty.server.nio.SelectChannelConnector</name> 
							<idleTimeout>60000</idleTimeout>
					</httpConnector>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.0.1</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>pmd</report>
							<report>cpd</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<findbugsXmlOutput>true</findbugsXmlOutput>
					<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
					<xmlOutput>true</xmlOutput>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<parallel>methods</parallel>
					<threadCount>10</threadCount>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	
	<pluginRepositories>
<!-- 	  <pluginRepository>
	    <id>codehaus-snapshots</id>
	    <name>Codehaus Snapshots</name>
	    <url>http://nexus.codehaus.org/snapshots/</url>
	    <releases>
	      <enabled>false</enabled>
	      <updatePolicy>always</updatePolicy>
	    </releases>
	    <snapshots>
	      <enabled>true</enabled>
	      <updatePolicy>always</updatePolicy>
	    </snapshots>
	  </pluginRepository> -->
	</pluginRepositories>
	
	<repositories>
		<repository>
		  <id>codehaus-snapshots</id>
		  <name>Codehaus Snapshots</name>
		  <url>http://nexus.codehaus.org/snapshots/</url>
		  <releases>
		    <enabled>true</enabled>
		    <updatePolicy>always</updatePolicy>
		  </releases>
		  <snapshots>
		    <enabled>true</enabled>
		    <updatePolicy>always</updatePolicy>
		  </snapshots>
		</repository>
	  	<!-- QueryDSL Repository Address -->
		<repository>
			<id>msource</id>
			<url>http://source.mysema.com/maven2/releases/</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
				<updatePolicy>always</updatePolicy>
			</snapshots>
		</repository>
		<!-- Spring Release Repository -->
		<repository>
			<id>spring-release</id>
			<name>Spring RELEASE Repository</name>
			<url>http://repo.springsource.org/libs-release</url>
		</repository>
		<!-- BoneCP Repository -->
		<repository>
			<releases>
				<enabled>true</enabled>
			</releases>
			<id>bonecp-repo</id>
			<name>BoneCP Repository</name>
			<url>http://jolbox.com/bonecp/downloads/maven</url>
		</repository>
	</repositories>

	<profiles>
		<profile>
			<id>linux</id>
			<activation>
				<os>
					<family>linux</family>
				</os>
			</activation>
			<properties>
				<env.properties.file>${env.HOME}/env.properties</env.properties.file>
			</properties>
		</profile>
		<profile>
			<id>windows</id>
			<activation>
				<os>
					<family>windows</family>
				</os>
			</activation>
			<properties>
				<env.properties.file>${env.HOMEDRIVE}${env.HOMEPATH}/env.properties</env.properties.file>
			</properties>
		</profile>
	</profiles>
	
	
</project>